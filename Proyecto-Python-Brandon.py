#Proyecto-Campus

class Camper:
    def __init__(self, id, nombres, apellidos, direccion, acudiente, telefono_celular, telefono_fijo, estado, riesgo, ruta_asignada=None):
        self.id = id
        self.nombres = nombres
        self.apellidos = apellidos
        self.direccion = direccion
        self.acudiente = acudiente
        self.telefono_celular = telefono_celular
        self.telefono_fijo = telefono_fijo
        self.estado = estado
        self.riesgo = riesgo
        self.ruta_asignada = ruta_asignada

    def cambiar_estado(self, nuevo_estado):
        self.estado = nuevo_estado

    def asignar_ruta(self, nueva_ruta):
        self.ruta_asignada = nueva_ruta

class Trainer:
    def __init__(self, nombre, especialidad, horario):
        self.nombre = nombre
        self.especialidad = especialidad
        self.horario = horario

    def asignar_ruta(self, ruta):
        # Implementar l√≥gica para asignar ruta al Trainer
        pass

class Ruta:
    def __init__(self, nombre, capacidad, entrenador_asignado=None):
        self.nombre = nombre
        self.capacidad = capacidad
        self.entrenador_asignado = entrenador_asignado
        self.campers_asignados = []

    def asignar_entrenador(self, entrenador):
        self.entrenador_asignado = entrenador

    def agregar_camper(self, camper):
        self.campers_asignados.append(camper)

    def verificar_capacidad(self):
        if len(self.campers_asignados) < self.capacidad:
            return True
        else:
            return False

class Modulo:
    def __init__(self, nombre, contenido):
        self.nombre = nombre
        self.contenido = contenido

class Coordinador:
    def matricular_camper(self, camper, ruta, entrenador, fecha_inicio, fecha_finalizacion, salon_entrenamiento):
        camper.asignar_ruta(ruta)
        ruta.agregar_camper(camper)
        ruta.asignar_entrenador(entrenador)
        

    def registrar_notas(self, camper, modulo, nota_teorica, nota_practica):
        # Implementar l√≥gica para registrar notas
        pass

    def generar_reportes(self):
        # Implementar l√≥gica para generar reportes
        pass

#Cree instancias de clases para pruebas
camper_1 = Camper("5553228779", "Andres", "Galan", "Carrera 12 #154-24", "Adam Noruega", "7788246513", "1324456243", "Inscrito", "Ninguno")
trainer_1 = Trainer("Juan Perez", "NodeJS", "Lunes y Mi√©rcoles")
ruta_1 = Ruta("Ruta NodeJS", 33)
modulo_1 = Modulo("Fundamentos de programaci√≥n", "Introducci√≥n a la algoritmia, PSeInt y Python")
coordinador = Coordinador()

# Matricular camper en una ruta
coordinador.matricular_camper(camper_1, ruta_1, trainer_1, "2024-02-01", "2024-05-01", "Sal√≥n A")

# Cambiar estado de un camper
camper_1.cambiar_estado("Cursando")

# Asignar notas a un camper en un m√≥dulo
coordinador.registrar_notas(camper_1, modulo_1, 70, 80)

# Generar reportes
coordinador.generar_reportes()


while True:
    
    print("\n ‚ñÅ ‚ñÇ ‚ñÑ ‚ñÖ ‚ñÜ ‚ñá ‚ñà MENU PRINCIPAL ‚ñà ‚ñá ‚ñÜ ‚ñÖ ‚ñÑ ‚ñÇ ‚ñÅ")
    print("1. ‚ûï A√±adir un/a nuev@ camper. ")
    print("2. üìä Mostrar los datos de un camper registrado. ")
    print("3. ‚ùå Eliminar un camper. ")
    print("4")
    print("0. üö™ Salir. ")
    
    print("‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†ø‚†ø‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø")
    print("‚£ø‚£ø‚£ø‚†õ‚¢ª‚£ø‚£ø‚£ø‚£ø‚†ø‚†õ‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ø‚†õ‚†ø‚£ü‚£ª‚°ø‚†õ‚†ª‚£ø‚£ø‚£ø‚£ø")
    print("‚£ø‚£ø‚£ø‚°Ü‚£æ‚£ø‚£ø‚†ü‚†Å‚†Ä‚£Ä‚£á‚£Ä‚£†‚£§‚£§‚£Ñ‚£Ä‚£∏‚£Ä‚†Ä‚†à‚†ª‚£ß‚£Ä‚£Ä‚£ø‚£ø‚£ø‚£ø")
    print("‚£ø‚£ø‚£ø‚°á‚£ø‚£ø‚†ã‚¢Ä‚£æ‚†ü‚†â‚¢â‚£≠‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚°Ä‚†ô‚£ø‚£â‚¢ø‚£ø‚£ø‚£ø")
    print("‚£ø‚£ø‚£ø‚°ø‚£ø‚†á‚¢†‚£ø‚†Å‚¢Ä‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ñ‚†∏‚£ø‚¢ø‚£ø‚£ø‚£ø")          
    print("‚£ø‚£ø‚†á‚¢∞‚°ü‚†Ä‚£æ‚°á‚¢Ä‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚†Ä‚¢ª‚°Ü‚†∏‚£ø‚£ø") 
    print("‚£ø‚£ø‚†Ä‚¢∏‚°á‚¢∞‚£ø‚†Ä‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ü‚¢∏‚°á‚†Ä‚£ø‚£ø")        
    print("‚£ø‚£ß‚°Ä‚¢∏‚°á‚†ò‚£ø‚£∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†É‚¢∏‚°á‚¢Ä‚£º‚£ø")  
    print("‚£ø‚£ø‚£ø‚£æ‚£á‚†Ä‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚†Ä‚£∏‚£∑‚£ø‚£ø‚£ø")
    print("‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ñ‚†à‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚†Å‚£†‚£ø‚£ø‚£ø‚£ø‚£ø")
    print("‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚°Ä‚†à‚†õ‚†ø‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†ø‚†õ‚†Å‚¢Ä‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø")
    print("‚£ø‚£ø‚£ø‚£ø‚£ø‚°É‚†à‚†õ‚†∑‚£¶‚£§‚£Ä‚£Ä‚£Ä‚†Ä‚†Ä‚£Ä‚£Ä‚£Ä‚£§‚£¥‚†æ‚†õ‚†Å‚¢ò‚£ø‚£ø‚£ø‚£ø‚£ø")
    print("‚£ø‚£ø‚†ü‚†ã‚†à‚†ô‚†∑‚£¶‚£§‚£Ä‚°à‚†â‚¢π‚°ü‚†õ‚†õ‚¢ª‚°è‚†â‚¢Å‚£Ä‚£§‚£¥‚†æ‚†ã‚†Å‚†ô‚†ª‚£ø‚£ø")
    print("‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†ô‚†õ‚†õ‚†∑‚†∂‚†∂‚†æ‚†õ‚†õ‚†ã‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø")
    print("‚£ø‚£§‚£§‚£º‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£ß‚£§‚£§‚£ø")
    print("‚ñà‚ñÄ‚ñÄ‚ÄÉ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñà‚ñë‚ñà‚ÄÉ‚ñà‚ñÄ‚ÄÉ‚ñà‚ñë‚ñë‚ÄÉ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÑ‚ñë‚ñà‚ÄÉ‚ñà‚ñÄ‚ñÑ‚ÄÉ‚ñà‚ñÄ")
    print("‚ñà‚ñÑ‚ñÑ‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñà‚ñë‚ñÄ‚ñë‚ñà‚ÄÉ‚ñà‚ñÄ‚ñÄ‚ÄÉ‚ñà‚ñÑ‚ñà‚ÄÉ‚ñÑ‚ñà‚ÄÉ‚ñà‚ñÑ‚ñÑ‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñà‚ñë‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÑ‚ñÄ‚ÄÉ‚ñÑ‚ñà")

    
    option = input("Seleccione una opci√≥n‚ùó (1-4): ")


    if option == '1':
        import json
        
        camper = {}
        camper["Numero de Identificacion"] = float(input("Ingrese el numero de identificacion:  "))
        camper["Nombres"] = input("Ingrese el nombre del camper:  ")
        camper["Direccion"]= input("Ingrese la direccion del camper:  ")
        camper["Acudiente"] = input("Ingrese el tel√©fono del cliente:  ")
        camper["Telefonos de contacto"] = input("Ingrese el numero del camper:  ")
        camper["Numero fijo"] = input("Ingrese el numero fijo:  ")
        camper["Estado"] = input("Ingrese el estado del camper:  " )
        camper["Riesgo"] = input("Defina el riesgo del camper:  " )
        camper["Ruta"] = input("Establezca la ruta del camper:  ")
    
        file_name = "Camper.json"

        with open(file_name, "w") as json_file:
         json.dump(camper, json_file, indent=4)
        
        print(f"Has a√±adido un nuevo camper en '{file_name}'. ")

    elif option == '2':
        print("Inserte el camper que desearia ver")

        



    elif option == '3':
        camper_nombre = input("Ingrese el nombre del camper a eliminar: ")
        remover_camper(camper_nombre)


    elif option == '0':
        print("üì§ ùôéùôñùô°ùôûùôöùô£ùôôùô§ ùôôùôöùô° ùô•ùôßùô§ùôúùôßùôñùô¢ùôñ, ùôÉùôñùô®ùô©ùôñ ùô°ùô™ùôöùôúùô§! !")
        break


    else:
        print("Error: Opci√≥n no v√°lida. Por favor, seleccione una opci√≥n del 1 al 4.") 